<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>com.anugs</groupId>
	<artifactId>com.angus.ssh</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<slf4j.version>1.7.8</slf4j.version>
		<logback.version>1.1.2</logback.version>
	</properties>
	<dependencies>
		<!-- add spring libraries -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-expression</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-beans</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-aop</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-context</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-context-support</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-tx</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-jdbc</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-orm</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-oxm</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-web</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-webmvc</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-webmvc-portlet</artifactId>

			<version>${org.springframework.version}</version>

		</dependency>

		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->

		<dependency>

			<groupId>org.springframework</groupId>

			<artifactId>spring-test</artifactId>

			<version>${org.springframework.version}</version>

			<scope>test</scope>

		</dependency>

		<!-- end spring dependence -->

		<!-- add hibernate library -->

		<dependency>

			<groupId>org.hibernate</groupId>

			<artifactId>hibernate-entitymanager</artifactId>

			<version>4.1.0.Final</version>

		</dependency>

		<!-- end add hibernate library -->

		<!-- Gson: Java to Json conversion -->

		<dependency>

			<groupId>com.google.code.gson</groupId>

			<artifactId>gson</artifactId>

			<version>2.1</version>

			<scope>compile</scope>

		</dependency>
		<!-- end add Gson -->

		<dependency>

			<groupId>javassist</groupId>

			<artifactId>javassist</artifactId>

			<version>3.8.0.GA</version>

		</dependency>

		<!-- add struts2 libiary -->

		<dependency>

			<groupId>org.apache.struts</groupId>

			<artifactId>struts2-core</artifactId>

			<version>2.3.16</version>

		</dependency>

		<dependency>

			<groupId>org.apache.struts</groupId>

			<artifactId>struts2-spring-plugin</artifactId>

			<version>2.3.16</version>

		</dependency>

		<dependency>

			<groupId>org.apache.struts</groupId>

			<artifactId>struts2-json-plugin</artifactId>

			<version>2.3.16</version>

		</dependency>

		<!-- end add struts library -->

		<!-- xwork -->

		<dependency>

			<groupId>org.apache.struts.xwork</groupId>

			<artifactId>xwork-core</artifactId>

			<version>2.3.16</version>

		</dependency>

		<!-- xwork -->

		<!-- commons-io -->

		<dependency>

			<groupId>commons-io</groupId>

			<artifactId>commons-io</artifactId>

			<version>2.4</version>

		</dependency>
		<!-- common -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>

		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.3</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- j2ee web spec -->
		<!-- update to servlet 3.0 for spring 4.0 MockHttpServletRequest -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- WEB end -->
		
		<!-- LOGGING begin -->
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- logback -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<!-- 代码直接调用log4j会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- 代码直接调用commons-logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- log4jdbc -->
			<dependency>
				<groupId>com.googlecode.log4jdbc</groupId>
				<artifactId>log4jdbc</artifactId>
				<version>1.2</version>
				<scope>runtime</scope>
			</dependency>
			<!-- LOGGING end -->
	</dependencies>
	<modules>
		<module>com.angus.view</module>
	</modules>
</project>